# Example Software AG Products containers building pipeline
# Fork and specialize according to need

trigger:
- main

pool:
  name: WmDevOpsTutorialAgentsPool
  vmImage: Canonical:0001-com-ubuntu-confidential-vm-focal:20_04-lts-gen2:latest

variables:
  - group: ContainerImagesBuild.Options

jobs:

- job: msr1011leanOriginalApproach
  displayName: 'MSR 10.11 lean original approach'
  steps:

    # Some variables must be propagated accross steps
    - script: |
        echo 'Computing initial local variables for job'

        JOB_SUIF_TEMPLATE="MSR/1011/lean"
        echo "##vso[task.setvariable variable=JOB_SUIF_TEMPLATE;]${JOB_SUIF_TEMPLATE}"

        JOB_DATE=$(date +%y-%m-%d)
        echo "##vso[task.setvariable variable=JOB_DATE;]${JOB_DATE}"

        JOB_DATETIME=$(date +%y-%m-%d'T'%H.%M.%S_%3N)
        echo "JOB_DATETIME=${JOB_DATETIME}"
        echo "##vso[task.setvariable variable=JOB_DATETIME;]${JOB_DATETIME}"

        JOB_SUIF_TAG=$(SUIF_TAG)
        JOB_SUIF_TAG=${JOB_SUIF_TAG:-main}
        echo "##vso[task.setvariable variable=JOB_SUIF_TAG;]${JOB_SUIF_TAG}"
      displayName: 'Job Locals'

    # grant execution permissions to the repository scripts
    - script: chmod u+x ./*.sh
      displayName: "Grant shell execution permissions"
    
    - script: ./01.getSUIF.sh
      displayName: "Get SUIF commons"

    # get SA share secrets
    - task: DownloadSecureFile@1
      name: SASecureInfo
      displayName: 'Download secure information for images share'
      inputs: 
        secureFile: 'sa.share.secrets.sh'

    # mount SA share
    - script: ./02.mountImagesShare.sh
      displayName: 'Mount images share'

    # update ubuntu machine
    - script: ./03.prepareAgentMachine.sh
      displayName: 'System software preparation'

    # assure installation binaries
    - script: ./04.assureInstallBinaries.sh
      displayName: 'Assure installation binaries'
    
    # Boostrap Update Manager
    - script: ./05.installSUM.sh
      displayName: 'Install SUM'

    # Save audit on share 
    # HINT: ou should use this step only for debug purposes
    # HINT: without this step the mount may be readonly
    - script: ./11.saveAudit.sh
      displayName: 'Save Audit on Share'
      condition: always()

    # umount SA share
    - script: ./12.unmountShare.sh
      displayName: 'Unmount images share'
      condition: always()